.tests-image: &tests-image
  image: $CI_REGISTRY_IMAGE/php-fpm:latest
  services:
    - name: $CI_REGISTRY_IMAGE/mysql:latest
      alias: mysql

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - vendor/

variables:
  MYSQL_ROOT_PASSWORD: yggem1991
  MYSQL_DATABASE: dbbezbahil
  MYSQL_USER: ubezbahil
  MYSQL_PASSWORD: BMnM@SNXiwz8

before_script:
  - 'docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY'

#  - sh ci/ci-php-install.sh
#  - composer global require hirak/prestissimo
#  - composer install -o

build-fpm:
  stage: build
  script:
    - source ./laradock/.env
    # fetches the latest image (not failing if image is not found)
    - 'docker pull $CI_REGISTRY_IMAGE/php-fpm:latest || true'
    - >
      docker build
        --pull
        --cache-from $CI_REGISTRY_IMAGE/php-fpm:latest
        --tag $CI_REGISTRY_IMAGE/php-fpm:latest ./laradock/php-fpm-symfony'
      .
    - 'docker push $CI_REGISTRY_IMAGE/php-fpm:latest'

build-percona:
  stage: build
  script:
    - source ./laradock/.env
    # fetches the latest image (not failing if image is not found)
    - 'docker pull $CI_REGISTRY_IMAGE/percona:latest || true'
    - >
      docker build
        --pull
        --cache-from $CI_REGISTRY_IMAGE/percona:latest
        --tag $CI_REGISTRY_IMAGE/percona:latest ./laradock/percona'
      .
    - 'docker push $CI_REGISTRY_IMAGE/percona:latest'

phpunit:
  <<: *tests-image
  stage: test
  script:
    - sh ci/phpunit.sh

phpstan:
  <<: *tests-image
  stage: test
  script:
    - sh ci/phpstan.sh

deploy_staging:
  stage: deploy_staging
  environment:
    name: staging
    url: http://bezbahil.aw-dev.ru
  before_script:
    # Setup SSH deploy keys
    - 'which ssh-agent || ( apk add openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh deployer@aw-dev.ru "cd /var/www/sites/bezbahil/releases/1 && git pull origin && exit"
  only:
    - develop

stages:
  - build
  - test
  - deploy_staging