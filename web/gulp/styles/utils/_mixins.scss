@mixin btnHeaderMobile($bgColor, $color) {
    width: 3rem;
    height: 3rem;
    display: inline-flex;
    justify-content: center;
    text-align: center;
    font-size: 1rem;
    background-color: $bgColor;
    color: $color;
    cursor: pointer;
    border: solid 0.1rem $bgColor;
    border-radius: 20rem;
    
    &:hover {
        background-color:lighten($bgColor, 10%);
        color: $color !important;
    }
}

@mixin btnDesc($bgColor, $color) {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-width: 20rem;
    min-height: 5.5rem;
    padding: 0 2rem;
    font-size: 1.6rem;
    font-family: $main-font-semibold;
    background-color: $bgColor;
    color: $color;
    cursor: pointer;
    text-align: center;
    border: solid 0.1rem $bgColor;
    border-radius: 20rem;
    @media screen and (max-width: 576px){
        width: 100%;
        margin: 0 0 2rem 0 !important;
    }

    &:hover {
        background-color:lighten($bgColor, 10%);
        color: $color !important;
    }
}

@mixin btnDescBorder($bgColor, $color, $border-color) {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-width: 20rem;
    min-height: 5.5rem;
    padding: 0 2rem;
    font-size: 1.6rem;
    font-family: $main-font-semibold;
    background-color: $bgColor;
    color: $color;
    cursor: pointer;
    text-align: center;
    border: solid 0.1rem $border-color;
    border-radius: 20rem;
    @media screen and (max-width: 576px){
        width: 100%;
        margin: 0 0 2rem 0 !important;
    }

    &:hover {
        background-color:lighten($bgColor, 10%);
        color: $color !important;
        border: solid 0.1rem $color;
    }
}

@mixin smallBtn($bgColor, $color) {
    display: inline-flex;
    justify-content: center;
    text-align: center;
    font-size: 1.4rem;
    background-color: $bgColor;
    color: $color;
    padding: 1.4rem 3rem;
    cursor: pointer;
    border: none;
    
    &:hover {
        background-color:lighten($bgColor, 10%);
        color: $color !important;
    }
}

@mixin boxShadow {
    box-shadow: 0 0 1rem rgba(25,108,156,.205);
}

@mixin noAnimate {
    opacity: 1;
    transition: none;
    transition-delay: 0s;
    -webkit-transform: translate(0);
    transform: translate(0);
}

@mixin flex($fg: 1, $fs: 0, $fb: auto) {

    // Set a variable to be used by box-flex properties
    $fg-boxflex: $fg;

    // Box-Flex only supports a flex-grow value so lets grab the
    // first item in the list and just return that.
    @if type-of($fg) == 'list' {
        $fg-boxflex: nth($fg, 1);
    }

    -webkit-box: $fg-boxflex;
    -moz-box: $fg-boxflex;
    -webkit-flex: $fg $fs $fb;
    -ms-flex: $fg $fs $fb;
    flex: $fg $fs $fb;
}
